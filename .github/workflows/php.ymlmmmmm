# For a detailed breakdown of this workflow, see https://octopus.com/docs/guides/deploy-php-app/to-nginx/using-octopus-onprem-github-builtin
#
# The following workflow provides an opinionated template you can customize for your own needs.
#
# If you are not an Octopus user, the "Push to Octopus", "Generate Octopus Deploy build information",
# and "Create Octopus Release" steps can be safely deleted.
#
# To configure Octopus, set the OCTOPUS_API_TOKEN secret to the Octopus API key, and
# set the OCTOPUS_SERVER_URL secret to the Octopus URL.
#
# Double check the "project" and "deploy_to" properties in the "Create Octopus Release" step
# match your Octopus projects and environments.
#
# Get a trial Octopus instance from https://octopus.com/start

name: PHP Build
'on':
  workflow_dispatch: {}
  push: {}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
        versionSpec: 5.x
    - id: determine_version
      name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.15
      with:
        additionalArguments: /overrideconfig mode=Mainline
    - name: Install Octopus Deploy CLI
      uses: OctopusDeploy/install-octopus-cli-action@v1
      with:
        version: latest
    - name: Install Dependencies
      run: composer install
      shell: bash
    - name: List Dependencies
      run: composer show --all > dependencies.txt
      shell: bash
    - name: Collect Dependencies
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies
        path: dependencies.txt
    - name: List Dependency Updates
      run: composer outdated > dependencyUpdates.txt
      shell: bash
    - name: Collect Dependency Updates
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies Updates
        path: dependencyUpdates.txt
    - name: Test
      run: vendor/bin/phpunit --log-junit results.xml tests
      shell: bash
    - if: always()
      name: Report
      uses: dorny/test-reporter@v1
      with:
        name: PHP Tests
        path: results.xml
        reporter: java-junit
        fail-on-error: 'false'
    - name: Package
      run: |-
        SOURCEPATH=.
        OUTPUTPATH=.
        octo pack \
         --basePath ${SOURCEPATH} \
         --outFolder ${OUTPUTPATH} \
         --id RandomQuotes-PHP \
         --version ${{ steps.determine_version.outputs.semVer }} \
         --format zip \
         --overwrite \
         --include '**/*.php' \
         --include '**/*.html' \
         --include '**/*.htm' \
         --include '**/*.css' \
         --include '**/*.js' \
         --include '**/*.min' \
         --include '**/*.map' \
         --include '**/*.sql' \
         --include '**/*.png' \
         --include '**/*.jpg' \
         --include '**/*.jpeg' \
         --include '**/*.gif' \
         --include '**/*.json' \
         --include '**/*.env' \
         --include '**/*.txt' \
         --include '**/*.Procfile'
      shell: bash
    - name: Tag Release
      uses: mathieudutour/github-tag-action@v6.1
      with:
        custom_tag: ${{ steps.determine_version.outputs.semVer }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - id: create_release
      name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
        release_name: Release ${{ steps.determine_version.outputs.semVer }} Run ${{ github.run_number }} Attempt ${{ github.run_attempt }}
        draft: ${{ github.ref == 'refs/heads/master' && 'false' || 'true' }}
        name: ${{ github.ref == 'refs/heads/master' && 'false' || 'true' }}
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
        files: RandomQuotes-PHP.${{ steps.determine_version.outputs.semVer }}.zip
    - name: Push packages to Octopus Deploy
      uses: OctopusDeploy/push-package-action@v3
      env:
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_TOKEN }}
        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
        OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
      with:
        packages: RandomQuotes-PHP.${{ steps.determine_version.outputs.semVer }}.zip
        overwrite_mode: OverwriteExisting
    - name: Generate Octopus Deploy build information
      uses: OctopusDeploy/push-build-information-action@v3
      env:
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_TOKEN }}
        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
        OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
      with:
        version: ${{ steps.determine_version.outputs.semVer }}
        packages: RandomQuotes-PHP
        overwrite_mode: OverwriteExisting
    - name: Create Octopus Release
      uses: OctopusDeploy/create-release-action@v3
      env:
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_TOKEN }}
        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
        OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
      with:
        project: RandomQuotes-PHP
        packages: RandomQuotes-PHP:${{ steps.determine_version.outputs.semVer }}
permissions:
  id-token: write
  checks: write
  contents: write
