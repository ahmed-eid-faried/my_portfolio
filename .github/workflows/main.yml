name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev', 'master' (or 'main')
          flutter-version: "3.19.3"
      - run: flutter pub get
      - run: flutter build apk
      - run: flutter build appbundle
      - run: flutter pub get
      - run: flutter build web

      - run: |
          echo "📂 Location of built APKs:"
          ls -R ${{ github.workspace }}/build/app/outputs/apk/
          echo "📂 Location of built app bundles:"
          ls -R ${{ github.workspace }}/build/app/outputs/bundle/
          echo "📂 Location of built web files:"
          ls -R ${{ github.workspace }}/build/web/

      - name: Publish to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          service_account_json_key: ${{ secrets.PLAY_STORE_JSON_KEY }}
          package_name: 'com.amadytech.amadytech'
          track: 'internal' # or 'alpha', 'beta', 'production'
          app_bundle: 'build/app/outputs/bundle/release/app-release.aab'
          
      - name: Print secret value
        run: echo ${{ secrets.PLAY_STORE_JSON_KEY }}
      
      # # Authenticate with Google Play Publishing API
      # - name: Authenticate with Google Play
      #   uses: google-github-actions/auth@v0
      #   with:
      #     credentials: $ {{ secrets.PLAY_STORE_JSON_KEY }}

      # # Upload APK to Google Play
      # - name: Upload APK to Google Play
      #   run: |
      #     bundletool build-apks --bundle=$BUILD_OUTPUT/app-release.aab --output=$BUILD_OUTPUT/app-release.apks
      #     bundletool install-apks --apks=$BUILD_OUTPUT/app-release.apks --key=$BUILD_OUTPUT/keystore.json --ks-pass=file:$BUILD_OUTPUT/keystore.pass --ks-key-alias=upload --ks-pass=pass:android
      #   env:
      #     BUILD_OUTPUT: $ {{ github.workspace }}
